// FLEXBOX CSS GRID

// VARIABLES
// xs grid
$grid-xs-columns: 12;
$grid-xs-sideMargin: 0px;
$grid-xs-gutter: 0px;
$grid-xs-breakpoint: map-get($breakpoints, "sm");

// sm grid
$grid-sm-columns: 12;
$grid-sm-sideMargin: 0px;
$grid-sm-gutter: 0px;
$grid-sm-breakpoint: map-get($breakpoints, "md");

// md grid
$grid-md-columns: 12;
$grid-md-sideMargin: 0px;
$grid-md-gutter: 0px;
$grid-md-breakpoint: map-get($breakpoints, "lg");

// lg grid
$grid-lg-columns: 12;
$grid-lg-sideMargin: 0px;
$grid-lg-gutter: 0px;
$grid-lg-breakpoint: map-get($breakpoints, "xl");

// pixels to % variables
$lg-grid-width: 100% - (($grid-lg-sideMargin * 2 / $grid-lg-breakpoint) * 100%);
$md-grid-width: 100% - (($grid-md-sideMargin * 2 / $grid-md-breakpoint) * 100%);
$sm-grid-width: 100% - (($grid-sm-sideMargin * 2 / $grid-sm-breakpoint) * 100%);
$xs-grid-width: 100% - (($grid-xs-sideMargin * 2 / $grid-xs-breakpoint) * 100%);

$lg-gutter: (
  ($grid-lg-gutter / ($grid-lg-breakpoint - ($grid-lg-sideMargin * 2))) * 100%
);
$md-gutter: (
  ($grid-md-gutter / ($grid-md-breakpoint - ($grid-md-sideMargin * 2))) * 100%
);
$sm-gutter: (
  ($grid-sm-gutter / ($grid-sm-breakpoint - ($grid-sm-sideMargin * 2))) * 100%
);
$xs-gutter: (
  ($grid-xs-gutter / ($grid-xs-breakpoint - ($grid-xs-sideMargin * 2))) * 100%
);

// FUNCTIONS AND MIXINS
@function col-width($i, $columns) {
  @return 100% / $columns * $i;
}

@mixin col-props($i, $columns, $gutter) {
  box-sizing: border-box;
  width: col-width($i, $columns);
  padding-left: $gutter/2;
  padding-right: $gutter/2;
}

@mixin columns-loop($name, $columns, $gutter) {
  @for $i from 0 through $columns {
    &-#{$name}-#{$i} {
      @include col-props($i, $columns, $gutter);
    }
    &-#{$name}-shift-#{$i} {
      margin-left: col-width($i, $columns);
    }
  }
}

@mixin grid-base($width) {
  box-sizing: border-box;
  display: flex;
  margin-left: auto;
  margin-right: auto;
  flex-wrap: wrap;
  max-width: $grid-lg-breakpoint;
  width: $width;
}

// CLASSES
.grid {
  @include grid-base($lg-grid-width);
  @media screen and (max-width: $grid-md-breakpoint) {
    width: $md-grid-width;
  }
  @media screen and (max-width: $grid-sm-breakpoint) {
    width: $sm-grid-width;
  }
  @media screen and (max-width: $grid-xs-breakpoint) {
    width: $xs-grid-width;
  }
  &-0 {
    @include grid-base(100%);
  }
}

.col {
  @include columns-loop(lg, $grid-lg-columns, $lg-gutter);
  @media screen and (max-width: $grid-md-breakpoint) {
    @include columns-loop(md, $grid-md-columns, $md-gutter);
  }
  @media screen and (max-width: $grid-sm-breakpoint) {
    @include columns-loop(sm, $grid-sm-columns, $sm-gutter);
  }
  @media screen and (max-width: $grid-xs-breakpoint) {
    @include columns-loop(xs, $grid-xs-columns, $xs-gutter);
  }
}
